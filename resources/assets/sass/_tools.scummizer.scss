@mixin transition_css($property,$duration,$timing-function,$delay){

  -moz-transition:$property $duration $timing-function $delay;
  -ms-transition:$property $duration $timing-function $delay;
  -webkit-transition:$property $duration $timing-function $delay;
  transition: $property $duration $timing-function $delay;
}

@mixin background_size($path,$repeat,$horizontal,$vertical,$size){
	background: url($path) $repeat $horizontal $vertical;
    background-size: $size;
    -webkit-background-size: $size;
}

@function make_em($number,$parent){
  @return #{$number/$parent}em;
}


@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }

    // Output standard non-prefixed declaration
    #{$property}: $value;
  }
}


.ios-shadow{
  position: relative;
  &:before{
    content:"";
    @include background_size("../img/shadow.svg",repeat, center, center, cover);
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top:0px;
    left: 0px;
    z-index:-1;
    filter: blur(20px);
    opacity: 0.17;
  }


}

.shadow--short{
  &:before{
    height: 35%;
  }

}
